{"version":3,"sources":["component/CoursesList.js","component/CourseAdd.js","App.js","reportWebVitals.js","index.js"],"names":["CoursesList","state","isEdit","name","list","props","onClick","togglestate","deleteCourse","index","setState","formUpdate","e","editCourse","update","console","log","className","onSubmit","preventDefault","type","defaultValue","ref","v","input","onChange","newValue","value","target","this","Component","CourseAdd","addCourse","updateCourse","current","App","courses","push","toast","success","position","splice","error","warn","map","course","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAsDeA,E,4MAnDXC,MAAQ,CACJC,QAAS,EACTC,KAAM,I,EAGVC,KAAO,WACH,OACQ,+BACI,+BAAO,EAAKC,MAAMF,OAClB,wBAAQG,QAAS,kBAAM,EAAKC,eAA5B,kBACA,wBAAQD,QAAS,kBAAM,EAAKD,MAAMG,aAAa,EAAKH,MAAMI,QAA1D,+B,EAKhBF,YAAc,WAAO,IACZL,EAAU,EAAKD,MAAfC,OACL,EAAKQ,SAAS,CACVR,QAAUA,K,EAIlBS,WAAa,SAACC,GACV,EAAKP,MAAMQ,WAAW,EAAKR,MAAMI,MAAM,EAAKR,MAAME,MAClD,EAAKI,e,EAGTO,OAAS,WAEL,OADAC,QAAQC,IAAI,QAER,uBAAMC,UAAU,SAASC,SAAU,SAACN,GAAOA,EAAEO,iBAAiB,EAAKR,cAAnE,UACI,uBAAOS,KAAK,OAAOC,aAAc,EAAKhB,MAAMF,KAAMmB,IAAK,SAACC,GAAD,OAAO,EAAKC,MAAQD,GAAGE,SAAU,EAAKC,WAC7F,uBAAON,KAAK,SAASO,MAAM,sB,EAKvCD,SAAW,SAACd,GAAD,OACP,EAAKF,SAAS,CACVP,KAAOS,EAAEgB,OAAOD,S,4CAGxB,WAAU,IACDzB,EAAU2B,KAAK5B,MAAfC,OACL,OACI,cAAC,WAAD,UACKA,EAAU2B,KAAKf,SAAae,KAAKzB,a,GA/CxB0B,aCUXC,G,MAVG,SAAC1B,GACf,OACQ,cAAC,WAAD,UACI,uBAAMY,UAAU,UAAUC,SAAUb,EAAM2B,UAA1C,UACI,uBAAOZ,KAAK,OAAOK,SAAUpB,EAAM4B,aAAcN,MAAStB,EAAM6B,UAChE,uBAAOd,KAAK,SAASO,MAAM,sB,OC2EhCQ,E,4MA1EblC,MAAQ,CACNmC,QAAU,CACR,CAACjC,KAAO,QACR,CAACA,KAAO,OACR,CAACA,KAAO,MACR,CAACA,KAAO,WAEV+B,QAAU,I,EAIZD,aAAe,SAACrB,GAEd,EAAKF,SAAS,CACZwB,QAAUtB,EAAEgB,OAAOD,QAErBZ,QAAQC,IAAI,EAAKf,MAAMiC,U,EAGzBF,UAAY,SAACpB,GACXA,EAAEO,iBACF,IAAIe,EAAU,EAAKjC,MAAMiC,QACrBE,EAAU,EAAKnC,MAAMmC,QACzBA,EAAQC,KAAK,CAAClC,KAAO+B,IAErB,EAAKxB,SAAS,CACZ0B,UACAF,QAAU,KAEZI,IAAMC,QAAQ,UAAU,CACtBC,SAAS,kB,EAIbhC,aAAe,SAACC,GACd,IAAI2B,EAAU,EAAKnC,MAAMmC,QACzBA,EAAQK,OAAOhC,EAAM,GACrB,EAAKC,SAAS,CAAC0B,YACfE,IAAMI,MAAM,WAAajC,EAAO,CAC9B+B,SAAW,kB,EAIf3B,WAAa,SAACJ,EAAMkB,GAClB,IAAIS,EAAU,EAAKnC,MAAMmC,QACZA,EAAQ3B,GACf,KAAWkB,EACjB,EAAKjB,SAAS,CACV0B,YAEJE,IAAMK,KAAK,QAAQ,CACjBH,SAAW,kB,4CAIf,WAAS,IAAD,OAGApC,EADYyB,KAAK5B,MAAhBmC,QACcQ,KAAI,SAACC,EAASpC,GACjC,OACE,cAAC,EAAD,CAAaN,KAAM0C,EAAO1C,KAAkBM,MAASA,EAAOD,aAAc,EAAKA,aAAcK,WAAY,EAAKA,YAAzEJ,MAIzC,OACE,0BAASQ,UAAU,OAAnB,UACE,0CACA,cAAC,EAAD,CAAWgB,aAAcJ,KAAKI,aAAcD,UAAWH,KAAKG,UAAWE,QAAWL,KAAK5B,MAAMiC,UAC7F,oBAAIjB,UAAU,OAAd,SAAsBb,IACvB,cAAC,IAAD,W,GAtEW0B,aCKHgB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b8a689e1.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport './CourseList.css';\r\nclass CoursesList extends Component{\r\n    state = {\r\n        isEdit : false,\r\n        name :''\r\n    }\r\n// List () Returns The List Of Elements\r\n    list = () => {\r\n        return (\r\n                <li>\r\n                    <span>{this.props.name}</span>\r\n                    <button onClick={() => this.togglestate()}>Edit</button>\r\n                    <button onClick={() => this.props.deleteCourse(this.props.index)}>Delete Course</button>\r\n                </li>\r\n        )\r\n    }\r\n// Toggle () To Change To Value Of state isEdite\r\n    togglestate = () => {\r\n        let {isEdit} = this.state\r\n        this.setState({\r\n            isEdit : !isEdit\r\n        })\r\n    }\r\n// Update The Old Value By New\r\n    formUpdate = (e) =>{\r\n        this.props.editCourse(this.props.index,this.state.name);\r\n        this.togglestate();\r\n    }\r\n// Return Form To Update\r\n    update = ()=> {\r\n        console.log(\"Edit\");\r\n        return(\r\n            <form className=\"update\" onSubmit={(e) => {e.preventDefault();this.formUpdate()}}>\r\n                <input type=\"text\" defaultValue={this.props.name} ref={(v) => this.input = v} onChange={this.newValue}/>\r\n                <input type=\"submit\" value=\"Update Course\"/>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    newValue = (e) => (\r\n        this.setState({\r\n            name : e.target.value\r\n        })\r\n    )\r\n    render (){\r\n        let {isEdit} = this.state\r\n        return(\r\n            <Fragment>\r\n                {isEdit ? (this.update()) : (this.list())}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default CoursesList;","import React, { Fragment } from 'react';\r\nimport './CourseAdd.css'\r\nconst CourseAdd = (props) => {\r\n    return (\r\n            <Fragment>\r\n                <form className=\"addform\" onSubmit={props.addCourse}>\r\n                    <input type=\"text\" onChange={props.updateCourse} value = {props.current}/>\r\n                    <input type=\"submit\" value=\"Add Course\" />\r\n                </form>\r\n            </Fragment>\r\n        )\r\n}\r\nexport default CourseAdd;","import React, {Component} from 'react';\nimport './App.css';\nimport CoursesList from './component/CoursesList';\nimport CourseAdd from './component/CourseAdd';\nimport {toast,ToastContainer} from 'react-toastify';\nimport './component/CourseList.css';\n\nclass App extends Component {\n  state = {\n    courses : [\n      {name : \"HTML\"},\n      {name : \"CSS\"},\n      {name : \"JS\"},\n      {name : \"jQuery\"},\n    ],\n    current : ''\n  }\n  // Functions \n  // Update Course ()\n  updateCourse = (e) => {\n    // Update Current From State By New Value\n    this.setState({\n      current : e.target.value\n    })\n    console.log(this.state.current)\n  }\n  // Add Course ()\n  addCourse = (e) => {\n    e.preventDefault();\n    let current = this.state.current; // Get Current From State \n    let courses = this.state.courses; // Get Courses From State \n    courses.push({name : current}); // Add Item To Courses Using Push \n    // Update The Old State \n    this.setState({ \n      courses,\n      current : ''\n    })\n    toast.success(\"Added !\",{\n      position:'bottom-right'\n    })\n  }\n  // Delete Course () \n  deleteCourse = (index) => {\n    let courses = this.state.courses;\n    courses.splice(index,1);\n    this.setState({courses})\n    toast.error('Deleted ' + index, {\n      position : 'bottom-right'\n    })\n  }\n  // Edit Course ()\n  editCourse = (index,value) => {\n    let courses = this.state.courses;\n    let course = courses[index];\n    course['name'] = value;\n    this.setState({\n        courses\n    })\n    toast.warn(\"Editd\",{\n      position : 'bottom-right',\n    })\n  }\n  //////\n  render(){\n   // Print List In Component\n    const {courses} = this.state; // Courses Array in State\n    const list = courses.map((course , index) => {  \n      return (\n        <CoursesList name={course.name} key={index} index = {index} deleteCourse={this.deleteCourse} editCourse={this.editCourse}/>\n      )\n    });\n    //// End Print \n    return(\n      <section className=\"Crud\">\n        <h2>Crud App</h2>\n        <CourseAdd updateCourse={this.updateCourse} addCourse={this.addCourse} current = {this.state.current}/>\n        <ul className=\"list\">{list}</ul>\n       <ToastContainer />\n      </section>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}